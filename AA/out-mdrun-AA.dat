                   :-) GROMACS - gmx mdrun, VERSION 5.1.4 (-:

                            GROMACS is written by:
     Emile Apol      Rossen Apostolov  Herman J.C. Berendsen    Par Bjelkmar
 Aldert van Buuren   Rudi van Drunen     Anton Feenstra   Sebastian Fritsch
  Gerrit Groenhof   Christoph Junghans   Anca Hamuraru    Vincent Hindriksen
 Dimitrios Karkoulis    Peter Kasson        Jiri Kraus      Carsten Kutzner
    Per Larsson      Justin A. Lemkul   Magnus Lundborg   Pieter Meulenhoff
   Erik Marklund      Teemu Murtola       Szilard Pall       Sander Pronk
   Roland Schulz     Alexey Shvetsov     Michael Shirts     Alfons Sijbers
   Peter Tieleman    Teemu Virolainen  Christian Wennberg    Maarten Wolf
                           and the project leaders:
        Mark Abraham, Berk Hess, Erik Lindahl, and David van der Spoel

Copyright (c) 1991-2000, University of Groningen, The Netherlands.
Copyright (c) 2001-2015, The GROMACS development team at
Uppsala University, Stockholm University and
the Royal Institute of Technology, Sweden.
check out http://www.gromacs.org for more information.

GROMACS is free software; you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License
as published by the Free Software Foundation; either version 2.1
of the License, or (at your option) any later version.

GROMACS:      gmx mdrun, VERSION 5.1.4
Executable:   /home/frederico.freitas/BIN/nd/gmx-5.1.4_NOMPI_gcc6.4.0_E5-2680v4/bin/gmx
Data prefix:  /home/frederico.freitas/BIN/nd/gmx-5.1.4_NOMPI_gcc6.4.0_E5-2680v4
Command line:
  gmx mdrun -v -deffnm t-80-ci2 -noddcheck -ntomp 28


Running on 1 node with total 28 cores, 28 logical cores
Hardware detected:
  CPU info:
    Vendor: GenuineIntel
    Brand:  Intel(R) Xeon(R) CPU E5-2680 v4 @ 2.40GHz
    SIMD instructions most likely to fit this hardware: AVX2_256
    SIMD instructions selected at GROMACS compile time: AVX2_256

Reading file t-80-ci2.tpr, VERSION 5.1.4 (single precision)
Changing nstlist from 20 to 40, rlist from 1.2 to 1.2

The number of OpenMP threads was set by environment variable OMP_NUM_THREADS to 28 (and the command-line setting agreed with that)
Using 1 MPI thread
Using 28 OpenMP threads


NOTE: You requested 28 OpenMP threads, whereas we expect the optimum to be with more MPI ranks with 1 to 6 OpenMP threads.

starting mdrun 'Macromolecule'
10000000 steps,  20000.0 ps.
